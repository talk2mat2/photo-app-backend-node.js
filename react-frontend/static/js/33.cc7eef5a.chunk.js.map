{"version":3,"sources":["views/users/Trips.js"],"names":["Container","Styled","div","BigText","p","ButtonsStyle","marginTop","marginRight","Buttons","Button","Listing","ul","Detailevents","location","state","Data","token","useState","BookingDetail","setBookingDetail","dispatch","useDispatch","history","useHistory","bookings","useSelector","setLoading","useEffect","length","map","items","_id","StartSession","id","a","axios","get","process","headers","authorization","then","res","console","log","data","GETMYBOOKINGSUCCESS","userData","catch","err","response","message","EndSession","React","useMemo","columns","Header","accessor","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","style","position","width","onClick","goBack","left","top","cursor","zIndex","fontSize","textAlign","height","bookedById","fname","lname","address","pricePerMinutes","bookingProcess","AdditionalAddress","time","status","disabled","timeStart","bind","minWidth","alignSelf","variant","color","timeEnd","sessionDuration","display","flexDirection","alignItems","Trips","props","CurrentUser","user","currentUser","match","FecthMyBookings","HandleAcceptOffer","Cell","row","original","accepted","push","pathname","url","backgroundColor","borderRadius","minHeight","padding","marginBottom","boxSizing","exact","path","overflowX","maxWidth","border","headerGroup","className","getHeaderGroupProps","column","getHeaderProps","render","getRowProps","cells","cell","getCellProps","component"],"mappings":"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","file":"static/js/33.cc7eef5a.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Styled from \"styled-components\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport { GETMYBOOKINGSUCCESS } from \"../../redux/action\";\r\nimport QueryBuilderIcon from \"@material-ui/icons/QueryBuilder\";\r\nimport { Switch, Route, Link, useHistory } from \"react-router-dom\";\r\nimport generatePDF from \"../pages/generatePdf\";\r\nimport { useTable } from \"react-table\";\r\n\r\nimport Moment from \"react-moment\";\r\nconst Container = Styled.div`\r\nwidth:100%;\r\ndisplay:flex;\r\nflex-direction:column;\r\nalign-items:center;\r\nbackground-color:#f1f0f0;\r\nmin-height:440px;\r\npadding-top:10px;\r\n`;\r\nconst BigText = Styled.p`\r\nfont-size:20px;\r\ncolor:grey;\r\nfont-weight:500;\r\n`;\r\nconst ButtonsStyle = {\r\n  marginTop: \"10px\",\r\n  marginRight: \"8px\",\r\n};\r\nconst Buttons = Styled(Button)`\r\n  && {\r\n\r\n\r\nmargin-top:8px;\r\n    color: rgb(190, 10, 10);\r\n    border-color: rgb(190, 10, 10);\r\n    &:focus {\r\n      background-color: white;\r\n    }\r\n    // @media (max-width: 1100px) {\r\n    //   display: none;\r\n    // }\r\n\t&:disabled {\r\n\t\tborder: 1px solid #999999;\r\n        background-color: #cccccc;\r\n        color: #666666;\r\n\t}\r\n  }\r\n`;\r\nconst Listing = Styled.ul`\r\nmargin-top:5px;\r\ndisplay:flex;\r\nflex-direction:column;\r\nalign-items:flex-start;\r\nbackground-color: #fffffff;\r\npadding:0px;\r\nwidth:95%;\r\nli{\r\n\tlist-style:none;\r\n\tfont-size:18px;\r\n\twidth:100%;\r\n  padding:10px;\r\n  border-radius:4px;\r\n  box-sizing:border-box;\r\n\tbackground-color: #ffff;\r\n\tcolor:grey;\r\n\tmargin-top:1.7px;\r\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px, rgba(60, 64, 67, 0.15) 0px 1px 3px 1px;\r\n\tmargin-bottom:4px;\r\n  small{\r\n    font-size:14px;\r\n  }\r\n}\r\n`;\r\n// const Buttons = Styled(Button)`\r\n//   && {\r\n\r\n// margin-top:8px;\r\n//     color: rgb(190, 10, 10);\r\n//     border-color: rgb(190, 10, 10);\r\n//     &:focus {\r\n//       background-color: white;\r\n//     }\r\n//     // @media (max-width: 1100px) {\r\n//     //   display: none;\r\n//     // }\r\n//   }\r\n// `\r\n// const ButtonsStyle = {\r\n// \tmarginTop: '50px',\r\n// \tmarginLeft: '80px',\r\n// }\r\nconst BookingCards = (props) => {\r\n  const { item, history, match, token, HandleAcceptOffer } = props;\r\n  const handlePdfDownload = () => {\r\n    item.bookingProcess && generatePDF(item.bookingProcess);\r\n  };\r\n\r\n  return (\r\n    <li\r\n    // style={{ cursor: 'pointer' }}\r\n    >\r\n      <small>Booked by: {item.bookedById.fname}</small>\r\n      <br />\r\n      <small>Date : {item.bookingDate.substring(0, 10)}</small>\r\n      <br />\r\n      <small>Email : {item.bookedById.Email}</small>\r\n      <br />\r\n      <small>Mobile : {item.bookedById.mobile}</small>\r\n      <br />\r\n      <small>Event Location : {item.address}</small>\r\n      <br />\r\n      {item.bookingProcess && (\r\n        <small>\r\n          Event Date : <Moment>{item.bookingProcess.date}</Moment>\r\n        </small>\r\n      )}\r\n      <br />\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-around\",\r\n        }}\r\n      >\r\n        {\" \"}\r\n        <Buttons\r\n          onClick={handlePdfDownload}\r\n          style={{\r\n            // backgroundColor: \"dodgerblue\",\r\n            // color: \"#ffffff\",\r\n            fontSize: \"9px\",\r\n          }}\r\n        >\r\n          Download Ticket\r\n        </Buttons>\r\n        <Buttons\r\n          style={{\r\n            // backgroundColor: \"dodgerblue\",\r\n            // color: \"#ffffff\",\r\n            fontSize: \"9px\",\r\n          }}\r\n          onClick={HandleAcceptOffer.bind(this, item._id)}\r\n          disabled={item.accepted}\r\n        >\r\n          {item.accepted ? \"accepted\" : \"accept offer\"}\r\n        </Buttons>\r\n        <Buttons\r\n          style={{\r\n            // backgroundColor: \"dodgerblue\",\r\n            // color: \"#ffffff\",\r\n            fontSize: \"9px\",\r\n          }}\r\n          disabled={!item.accepted}\r\n          onClick={() =>\r\n            history.push({\r\n              pathname: `${match.url}/events`,\r\n              state: { Data: item, token: token },\r\n            })\r\n          }\r\n        >\r\n          View More\r\n        </Buttons>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\nconst Detailevents = ({\r\n  location: {\r\n    state: { Data, token },\r\n  },\r\n}) => {\r\n  const [BookingDetail, setBookingDetail] = useState({});\r\n  let dispatch = useDispatch();\r\n  let history = useHistory();\r\n  let bookings = useSelector((state) => state.bookings);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    bookings.length &&\r\n      bookings.map((items) => {\r\n        // console.log(items)\r\n        return items._id === Data._id && setBookingDetail(items);\r\n      });\r\n  }, [bookings, Data._id]);\r\n  // console.log(data)\r\n  const StartSession = async (id) => {\r\n    setLoading(true);\r\n    await axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_URL}/photographer/StartSession?id=${id}`,\r\n\r\n        {\r\n          headers: { authorization: token },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        dispatch(GETMYBOOKINGSUCCESS(res.data.userData));\r\n        // setIsregistered(true)\r\n        // history.push('/dashboard')\r\n      })\r\n      .catch((err) => {\r\n        if (err.response) {\r\n          console.log(err.response.data.message);\r\n          // err.response.data.message &&\r\n\r\n          // err.response.data.error && setIsregistered(false)\r\n        }\r\n        console.log(err);\r\n      });\r\n  };\r\n  const EndSession = async (id) => {\r\n    setLoading(true);\r\n    await axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_URL}/photographer/EndSession?id=${id}`,\r\n\r\n        {\r\n          headers: { authorization: token },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        dispatch(GETMYBOOKINGSUCCESS(res.data.userData));\r\n        // setIsregistered(true)\r\n        // history.push('/dashboard')\r\n      })\r\n      .catch((err) => {\r\n        if (err.response) {\r\n          console.log(err.response.data.message);\r\n          // err.response.data.message &&\r\n\r\n          // err.response.data.error && setIsregistered(false)\r\n        }\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const data = React.useMemo(\r\n    () => [\r\n      // {\r\n      //   col1: \"Minsk\",\r\n      //   col2: \"27\",\r\n      //   col3: \"rain\",\r\n\r\n      // },\r\n      BookingDetail,\r\n    ],\r\n    [BookingDetail]\r\n  );\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"location\",\r\n        accessor: \"address\", // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: \"location details\",\r\n        accessor: \"bookingProcess.AdditionalAddress\", // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: \"Category\",\r\n        accessor: \"bookingProcess.category\",\r\n      },\r\n      {\r\n        Header: \"Purpose\",\r\n        accessor: \"bookingProcess.purpose\", // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: \"Amount(NGN)\",\r\n        accessor: \"bookingProcess.price\", // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: \"Status\",\r\n        accessor: \"bookingProcess.status\", // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: \"payment type\",\r\n        accessor: \"bookingProcess.payment_type\", // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: \"Event Date\",\r\n        accessor: \"bookingProcess.date\", // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: \"Event Duration\",\r\n        accessor: \"bookingProcess.duration\", // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: \"Event time(24h)\",\r\n        accessor: \"bookingProcess.time\", // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: \"Client Name\",\r\n        accessor: \"bookedById.fname\", // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: \"Client no.\",\r\n        accessor: \"bookedById.mobile\", // accessor is the \"key\" in the data\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({ columns, data });\r\n  return (\r\n    <div style={{ position: \"relative\", width: \"100%\" }}>\r\n      <div\r\n        onClick={history.goBack}\r\n        style={{\r\n          position: \"absolute\",\r\n          left: \"30px\",\r\n          top: \"18px\",\r\n          cursor: \"pointer\",\r\n          zIndex: 3,\r\n        }}\r\n      >\r\n        <ArrowBackIcon style={{ fontSize: \"30px\" }} />\r\n      </div>\r\n      <BigText style={{ textAlign: \"center\", fontSize: \"15px\" }}>\r\n        Booking Details\r\n      </BigText>\r\n      {/* <div style={{ overflowX: \"scroll\", maxWidth: \"90vw\" }}>\r\n        <table {...getTableProps()} style={{ border: \"solid 1px black\" }}>\r\n          <thead>\r\n            {headerGroups.map((headerGroup) => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column) => (\r\n                  <th\r\n                    {...column.getHeaderProps()}\r\n                    style={{\r\n                      // border: \"solid 3px red\",\r\n\r\n                      color: \"#ffffff\",\r\n                      backgroundColor: \"rgb(0, 162, 149)\",\r\n                    }}\r\n                  >\r\n                    {column.render(\"Header\")}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row) => {\r\n              prepareRow(row);\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map((cell) => {\r\n                    return (\r\n                      <td\r\n                        {...cell.getCellProps()}\r\n                        style={{\r\n                          padding: \"10px\",\r\n                          border: \"solid 1px gray\",\r\n                        }}\r\n                      >\r\n                        {cell.render(\"Cell\")}\r\n                      </td>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div> */}\r\n      <div style={{ height: \"60px\" }} />\r\n      {BookingDetail.bookedById && (\r\n        <Listing>\r\n          <li>\r\n            <BigText>\r\n              {BookingDetail.bookedById.fname} {BookingDetail.bookedById.lname}\r\n            </BigText>\r\n\r\n            <small>Location: {BookingDetail.address}</small>\r\n            <br />\r\n            <small>Price per min: NGN {BookingDetail.pricePerMinutes}</small>\r\n            <br />\r\n            <small>\r\n              Address details :\r\n              {BookingDetail.bookingProcess &&\r\n                BookingDetail.bookingProcess.AdditionalAddress}\r\n              :\r\n            </small>\r\n            <br />\r\n            <small>\r\n              Event Time:{\"   \"}\r\n              {BookingDetail.bookingProcess &&\r\n                BookingDetail.bookingProcess.time}\r\n              :\r\n            </small>\r\n            <br />\r\n            <small>\r\n              Payment status:{\"   \"}\r\n              {BookingDetail.bookingProcess &&\r\n                BookingDetail.bookingProcess.status}\r\n            </small>\r\n          </li>\r\n        </Listing>\r\n      )}\r\n      <div style={{ height: \"30px\" }} />\r\n      <Buttons\r\n        disabled={BookingDetail && BookingDetail.timeStart}\r\n        onClick={StartSession.bind(this, BookingDetail._id)}\r\n        style={{ ...ButtonsStyle, minWidth: \"70px\", alignSelf: \"flex-end\" }}\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n      >\r\n        <small> {!BookingDetail.timeStart ? \"Start Session\" : \"started\"}</small>\r\n      </Buttons>\r\n      {BookingDetail && BookingDetail.timeStart ? (\r\n        <Buttons\r\n          disabled={BookingDetail.timeEnd}\r\n          onClick={EndSession.bind(this, BookingDetail._id)}\r\n          style={{ ...ButtonsStyle, minWidth: \"70px\", alignSelf: \"flex-end\" }}\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n        >\r\n          <small> {BookingDetail.timeEnd ? \"Ended\" : \"End Session\"}</small>\r\n        </Buttons>\r\n      ) : null}\r\n      <div style={{ height: \"30px\" }}></div>\r\n      {BookingDetail.sessionDuration || BookingDetail.sessionDuration > -1 ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <>\r\n            <small>completed</small>\r\n            <QueryBuilderIcon style={{ color: \"#25D366\", fontSize: \"40px\" }} />\r\n          </>\r\n\r\n          <BigText>\r\n            total duration :{BookingDetail.sessionDuration} minutes !\r\n          </BigText>\r\n          {/* <BigText>\r\n            Amount Charge:NGN\r\n            {BookingDetail.sessionDuration * BookingDetail.pricePerMinutes} :\r\n          </BigText> */}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\nconst Trips = (props) => {\r\n  const CurrentUser = useSelector((state) => state.user.currentUser);\r\n  const { match, history } = props;\r\n  const dispatch = useDispatch();\r\n  // \tpath={match.url}\r\n  // {`${match.url}/signup`}\r\n  const bookings = useSelector((state) => state.bookings);\r\n  const token = CurrentUser && CurrentUser.token;\r\n  const FecthMyBookings = async () => {\r\n    await axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_URL}/photographer/FectMyBookings`,\r\n\r\n        {\r\n          headers: { authorization: token },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        // setBookinmgs(res.data.userData)\r\n        dispatch(GETMYBOOKINGSUCCESS(res.data.userData));\r\n        // setIsregistered(true)\r\n        // history.push('/dashboard')\r\n      })\r\n      .catch((err) => {\r\n        if (err.response) {\r\n          console.log(err.response.data.message);\r\n          // err.response.data.message &&\r\n\r\n          // err.response.data.error && setIsregistered(false)\r\n        }\r\n        console.log(err);\r\n      });\r\n  };\r\n  const HandleAcceptOffer = async (id) => {\r\n    await axios\r\n      .get(\r\n        `${process.env.REACT_APP_API_URL}/photographer/AcceptOffer?id=${id}`,\r\n\r\n        {\r\n          headers: { authorization: token },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        // setBookinmgs(res.data.userData)\r\n        dispatch(GETMYBOOKINGSUCCESS(res.data.userData));\r\n        // setIsregistered(true)\r\n        // history.push('/dashboard')\r\n      })\r\n      .catch((err) => {\r\n        if (err.response) {\r\n          console.log(err.response.data.message);\r\n          // err.response.data.message &&\r\n\r\n          // err.response.data.error && setIsregistered(false)\r\n        }\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    FecthMyBookings();\r\n  }, []);\r\n\r\n  const MapBookings = () => {\r\n    return (\r\n      bookings.length > 0 &&\r\n      bookings.map((item) => {\r\n        return (\r\n          <BookingCards\r\n            match={match}\r\n            item={item}\r\n            token={token}\r\n            history={history}\r\n            HandleAcceptOffer={HandleAcceptOffer}\r\n          />\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  const data = React.useMemo(\r\n    () => [\r\n      // {\r\n      //   col1: \"Minsk\",\r\n      //   col2: \"27\",\r\n      //   col3: \"rain\",\r\n\r\n      // },\r\n      ...bookings,\r\n    ],\r\n    [bookings]\r\n  );\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: \"location\",\r\n        accessor: \"address\", // accessor is the \"key\" in the data\r\n      },\r\n      // {\r\n      //   Header: \"location details\",\r\n      //   accessor: \"bookingProcess.AdditionalAddress\", // accessor is the \"key\" in the data\r\n      // },\r\n      {\r\n        Header: \"Category\",\r\n        accessor: \"bookingProcess.category\",\r\n      },\r\n      // {\r\n      //   Header: \"Purpose\",\r\n      //   accessor: \"bookingProcess.purpose\", // accessor is the \"key\" in the data\r\n      // },\r\n      // {\r\n      //   Header: \"Amnt. paid(NGN)\",\r\n      //   accessor: \"bookingProcess.amountPaid\", // accessor is the \"key\" in the data\r\n      // },\r\n      // {\r\n      //   Header: \"Status\",\r\n      //   accessor: \"bookingProcess.status\", // accessor is the \"key\" in the data\r\n      // },\r\n      // {\r\n      //   Header: \"payment type\",\r\n      //   accessor: \"bookingProcess.payment_type\", // accessor is the \"key\" in the data\r\n      // },\r\n      {\r\n        Header: \"Event Date\",\r\n        accessor: \"bookingProcess.date\", // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: \"Event Duration\",\r\n        accessor: \"bookingProcess.duration\", // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: \"Event time(24)\",\r\n        accessor: \"bookingProcess.time\", // accessor is the \"key\" in the data\r\n      },\r\n      {\r\n        Header: \"Client Name\",\r\n        accessor: \"bookedById.fname\", // accessor is the \"key\" in the data\r\n      },\r\n      // {\r\n      //   Header: \"Client no.\",\r\n      //   accessor: \"bookedById.mobile\", // accessor is the \"key\" in the data\r\n      // },\r\n      {\r\n        Header: \"Accept Invite\",\r\n        accessor: \"accepted\", // accessor is the \"key\" in the data\r\n        Cell: ({ row }) => (\r\n          // <a href=\"#\" onClick={() => console.log(row.original)}>\r\n          //   View\r\n          // </a>\r\n          // row.original.completed\r\n          //   ? \"ended\"\r\n          //   : null || row.original.accepted\r\n          //   ? \"accepted\"\r\n          //   : \"pending\",\r\n          <Buttons\r\n            style={{\r\n              // backgroundColor: \"dodgerblue\",\r\n              // color: \"#ffffff\",\r\n              fontSize: \"9px\",\r\n            }}\r\n            onClick={HandleAcceptOffer.bind(this, row.original._id)}\r\n            disabled={row.original.accepted}\r\n          >\r\n            {row.original.accepted ? \"accepted\" : \"accept book\"}\r\n          </Buttons>\r\n        ),\r\n      },\r\n      {\r\n        Header: \"View Details\",\r\n        accessor: \"bookingProcess._id\", // accessor is the \"key\" in the data\r\n        Cell: ({ row }) => (\r\n          // <a href=\"#\" onClick={() => console.log(row.original)}>\r\n          //   View\r\n          // </a>\r\n          // row.original.completed\r\n          //   ? \"ended\"\r\n          //   : null || row.original.accepted\r\n          //   ? \"accepted\"\r\n          //   : \"pending\",\r\n          <Buttons\r\n            style={{\r\n              // backgroundColor: \"dodgerblue\",\r\n              // color: \"#ffffff\",\r\n              fontSize: \"9px\",\r\n            }}\r\n            disabled={!row.original.accepted}\r\n            onClick={() =>\r\n              history.push({\r\n                pathname: `${match.url}/events`,\r\n                state: { Data: row.original, token: token },\r\n              })\r\n            }\r\n          >\r\n            View\r\n          </Buttons>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({ columns, data });\r\n  return (\r\n    <Container>\r\n      <div\r\n        style={{\r\n          backgroundColor: \"#ffffff\",\r\n          borderRadius: \"8px\",\r\n          minHeight: \"500px\",\r\n          width: \"94%\",\r\n          padding: \"10px\",\r\n          marginTop: \"20px\",\r\n          marginBottom: \"20px\",\r\n          boxSizing: \"border-box\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Switch>\r\n          <Route exact path={match.url}>\r\n            <div\r\n              style={{\r\n                backgroundColor: \"#ffffff\",\r\n                borderRadius: \"8px\",\r\n                minHeight: \"500px\",\r\n                width: \"94%\",\r\n                padding: \"10px\",\r\n                marginTop: \"10px\",\r\n                boxSizing: \"border-box\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <BigText style={{ fontSize: \"15px\" }}>Booking Received</BigText>\r\n              {/* <Listing>\r\n              {bookings.length > 0 ? MapBookings() : <small>empty</small>}\r\n            </Listing> */}\r\n              <div style={{ overflowX: \"auto\", maxWidth: \"90vw\" }}>\r\n                <table {...getTableProps()} style={{ border: \"none\" }}>\r\n                  <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                      <tr\r\n                        className=\"mytablerow\"\r\n                        {...headerGroup.getHeaderGroupProps()}\r\n                      >\r\n                        {headerGroup.headers.map((column) => (\r\n                          <th\r\n                            {...column.getHeaderProps()}\r\n                            style={{\r\n                              // border: \"solid 3px red\",\r\n                              color: \"grey\",\r\n                              height: \"40px\",\r\n                              fontSize: \"12px\",\r\n                              padding: \"10px\",\r\n                              borderRadius: \"2px\",\r\n                              boxSizing: \"border-box\",\r\n                              backgroundColor: \"#e0dede\",\r\n                            }}\r\n                          >\r\n                            {column.render(\"Header\")}\r\n                          </th>\r\n                        ))}\r\n                      </tr>\r\n                    ))}\r\n                  </thead>\r\n                  <tbody {...getTableBodyProps()}>\r\n                    {rows.map((row) => {\r\n                      prepareRow(row);\r\n                      return (\r\n                        <tr className=\"tableRowdata\" {...row.getRowProps()}>\r\n                          {row.cells.map((cell) => {\r\n                            return (\r\n                              <td\r\n                                {...cell.getCellProps()}\r\n                                style={{\r\n                                  padding: \"3px\",\r\n                                  boxSizing: \"border-box\",\r\n                                  fontSize: \"13px\",\r\n                                  border: \"none\",\r\n                                }}\r\n                              >\r\n                                {cell.render(\"Cell\")}\r\n                              </td>\r\n                            );\r\n                          })}\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </Route>\r\n          <Route path={`${match.url}/events`} component={Detailevents} />\r\n        </Switch>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Trips;\r\n"],"sourceRoot":""}