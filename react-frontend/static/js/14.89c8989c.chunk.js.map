{"version":3,"sources":["views/pages/PhotographersRegister.jsx","components/AlertDialog.js","../node_modules/@material-ui/core/esm/Dialog/Dialog.js","../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js","../node_modules/@material-ui/core/esm/DialogContent/DialogContent.js","../node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js","../node_modules/@material-ui/core/esm/DialogActions/DialogActions.js"],"names":["Container","styled","div","SelectContainer","SelectContentContainer1","BigText","p","SelectContentContainer2","Margin","Listing","ul","Input","input","Buttons","Button","PhotographersRegister","dispatch","useDispatch","history","useHistory","useState","email","setEmail","password","setPassword","Mystate","setMystate","Mylga","setMylga","fname","setFname","lname","setLname","mobile","setMobile","confpass","setConfPassword","loading","setLoading","ErrorMessage","setErrorMessage","MapLga","value","NaijaStates","lgas","map","xx","useEffect","console","log","Fragment","style","borderRadius","width","height","objectFit","loginImage","src","alt","href","autoComplete","onChange","e","target","type","required","placeholder","marginTop","border","marginBottom","defaultValue","name","id","all","state","textAlign","variant","color","onClick","preventDefault","values","axios","post","process","then","res","data","LOGINSUCCESS","push","setTimeout","window","location","reload","catch","err","response","message","size","fontSize","to","open","onClose","AlertDialog","props","children","aria-labelledby","aria-describedby","defaultTransitionDuration","enter","duration","enteringScreen","exit","leavingScreen","Dialog","React","ref","BackdropProps","classes","className","_props$disableBackdro","disableBackdropClick","_props$disableEscapeK","disableEscapeKeyDown","_props$fullScreen","fullScreen","_props$fullWidth","fullWidth","_props$maxWidth","maxWidth","onBackdropClick","onEnter","onEntered","onEntering","onEscapeKeyDown","onExit","onExited","onExiting","_props$PaperComponent","PaperComponent","Paper","_props$PaperProps","PaperProps","_props$scroll","scroll","_props$TransitionComp","TransitionComponent","Fade","_props$transitionDura","transitionDuration","TransitionProps","ariaDescribedby","ariaLabelledby","other","_objectWithoutProperties","mouseDownTarget","Modal","_extends","clsx","root","BackdropComponent","Backdrop","closeAfterTransition","appear","in","timeout","role","container","concat","capitalize","onMouseUp","event","currentTarget","current","onMouseDown","elevation","paper","String","paperFullScreen","paperFullWidth","withStyles","theme","position","scrollPaper","display","justifyContent","alignItems","scrollBody","overflowY","overflowX","content","verticalAlign","outline","margin","boxShadow","paperScrollPaper","flexDirection","maxHeight","paperScrollBody","paperWidthFalse","paperWidthXs","Math","max","breakpoints","xs","_defineProperty","down","paperWidthSm","sm","paperWidthMd","md","paperWidthLg","lg","paperWidthXl","xl","DialogTitle","_props$disableTypogra","disableTypography","Typography","component","padding","flex","DialogContent","_props$dividers","dividers","WebkitOverflowScrolling","paddingTop","borderTop","palette","divider","borderBottom","DialogContentText","DialogActions","_props$disableSpacing","disableSpacing","spacing","marginLeft"],"mappings":"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","file":"static/js/14.89c8989c.chunk.js","sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button, Grid, InputLabel, TextField } from \"@material-ui/core\";\r\n// import { Scripts } from \"../../scriptNew\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport AlertDialog from \"../../components/AlertDialog\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport NaijaStates from \"naija-state-local-government\";\r\nimport axios from \"axios\";\r\nimport { LOGINSUCCESS } from \"../../redux/action\";\r\nimport Header from \"../../components/Header\";\r\nconst Container = styled.div`\r\n  min-height: 100vh;\r\n  background-color: #ffff;\r\n  width: 100%;\r\n`;\r\nconst SelectContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  background-color: #ffff;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n`;\r\nconst SelectContentContainer1 = styled.div`\r\n  min-height: 400px;\r\n  width: 35%;\r\n\r\n  display: flex;\r\n  //   justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  //   background-color: #ffff;\r\n  text-align: center;\r\n\r\n  @media (max-width: 630px) {\r\n    width: 100vw;\r\n  }\r\n`;\r\nconst BigText = styled.p`\r\n  font-size: 25px;\r\n  font-weight: 600;\r\n  color: rgb(0, 162, 149);\r\n`;\r\nconst SelectContentContainer2 = styled.div`\r\n  background-color: #ffff;\r\n  min-height: 400px;\r\n  width: 60%;\r\n  display: flex;\r\n  //   justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  //   background-color: #ffff;\r\n  text-align: center;\r\n\r\n  @media (max-width: 630px) {\r\n    display: none;\r\n  }\r\n\r\n  #loginImage {\r\n    max-height: 95%;\r\n    object-fit: contain;\r\n    border-radius: 10px;\r\n    margin: 4px;\r\n  }\r\n`;\r\nconst Margin = styled.div`\r\n  height: 30px;\r\n`;\r\nconst Listing = styled.ul`\r\n  margin-top: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 70%;\r\n  align-items: center;\r\n  padding: 0px;\r\n  align-items: center;\r\n\r\n  li,\r\n  select {\r\n    padding: 0px;\r\n    list-style: none;\r\n    width: 100%;\r\n    margin-bottom: 3px;\r\n    text-align: left;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  margin-bottom: 8px;\r\n  border: 1px solid grey;\r\n  background-color: #ffff;\r\n  height: 50px;\r\n\r\n  &:focus {\r\n    border-bottom: 1px solid blue;\r\n    outline: none;\r\n  }\r\n`;\r\nconst Buttons = styled(Button)`\r\n  && {\r\n      border:none;\r\n    // background-color: rgb(71, 178, 228);\r\n    background-color: rgb(0, 162, 149);\r\n    margin-top: 8px;\r\n    outline:none;\r\n    width: 200px;\r\n    color: #ffff;\r\n    margin-top:20px;\r\n border-radius:20px;\r\n &:hover {\r\n    // color: rgb(71, 178, 228);\r\n    // background-color: white;\r\n    // border: 1px solid rgb(71, 178, 228);\r\n    background-color: rgb(0, 162, 149);\r\n    color: #ffff;\r\n  }\r\n`;\r\nconst PhotographersRegister = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [Mystate, setMystate] = useState(\"\");\r\n  const [Mylga, setMylga] = useState(\"\");\r\n  const [fname, setFname] = useState(\"\");\r\n  const [lname, setLname] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [confpass, setConfPassword] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [ErrorMessage, setErrorMessage] = useState(\"\");\r\n\r\n  // const handleEmailChange = (e) => setEmail(e.target.value);\r\n\r\n  // const handleFnameChange = (e) => setFname(e.target.value);\r\n  // const handleLnameChange = (e) => setLname(e.target.value);\r\n  // const handleMobileChange = (e) => setMobile(e.target.value);\r\n\r\n  // const handlePasswordChange = (e) => setPassword(e.target.value);\r\n  // const handleConfPasswordChange = (e) => setConfPassword(e.target.value);\r\n  const handleSignup = (values) => {\r\n    setLoading(true);\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_URL}/photographer/Register`, values)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        console.log(res.data);\r\n\r\n        dispatch(LOGINSUCCESS(res.data));\r\n        history.push(\"/dashboard\");\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 2000);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        if (err.response) {\r\n          console.log(err.response.data.message);\r\n          err.response.data.message &&\r\n            setErrorMessage(err.response.data.message);\r\n        }\r\n        console.log(err);\r\n        setErrorMessage(\r\n          \"An error occured ,make sure you have a working network\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confpass) {\r\n      return setErrorMessage(\"Both password dont match\");\r\n    }\r\n    if (\r\n      !email ||\r\n      !password ||\r\n      !fname ||\r\n      !lname ||\r\n      !mobile ||\r\n      !Mystate ||\r\n      !Mylga\r\n    ) {\r\n      return setErrorMessage(\"Error, all fields are required\");\r\n    }\r\n    // dispatch(signUp(email, password, mobile, fname, lname));handle\r\n    handleSignup({ email, password, fname, lname, mobile, Mylga, Mystate });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    // setEmail(\"\");\r\n    // setPassword(\"\");\r\n    // setConfPassword(\"\");\r\n    // setFname(\"\");\r\n    // setLname(\"\");\r\n    // setMobile(\"\");\r\n    // dispatch(clearSignupError());\r\n    setErrorMessage(\"\");\r\n  };\r\n\r\n  const Mapstate = () => {\r\n    return NaijaStates.all().map((xx) => (\r\n      <option value={xx.state}>{xx.state}</option>\r\n    ));\r\n  };\r\n\r\n  const MapLga = (value) => {\r\n    return (\r\n      value &&\r\n      NaijaStates.lgas(value).lgas.map((xx) => <option value={xx}>{xx}</option>)\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    console.log(MapLga(Mystate));\r\n  }, [Mystate]);\r\n  return (\r\n    <React.Fragment>\r\n      {/* <Header /> */}\r\n      <Container>\r\n        <SelectContainer>\r\n          <SelectContentContainer2>\r\n            {/* <Margin /> */}\r\n\r\n            <img\r\n              style={{\r\n                borderRadius: \"10px\",\r\n                width: 100 + \"%\",\r\n                height: 100 + \"%\",\r\n                objectFit: \"cover\",\r\n              }}\r\n              loginImage\r\n              src=\"/assets/img/intro/intro-8.jpg\"\r\n              alt=\"img\"\r\n            />\r\n          </SelectContentContainer2>\r\n          <SelectContentContainer1>\r\n            <Margin />\r\n            <a href=\"/\">\r\n              <img\r\n                style={{\r\n                  height: \"40px\",\r\n\r\n                  objectFit: \"cover\",\r\n                }}\r\n                loginImage\r\n                src=\"/assets/img/logo-dark.png\"\r\n                alt=\"img\"\r\n              />\r\n            </a>\r\n\r\n            <BigText> Photographers register</BigText>\r\n            <small>\r\n              <em>\r\n                interested in becoming a member of <br />\r\n                Ogaphoto Photographers ?\r\n              </em>\r\n            </small>\r\n            <Listing>\r\n              <li>\r\n                <Input\r\n                  autoComplete=\"off\"\r\n                  value={fname}\r\n                  onChange={(e) => setFname(e.target.value)}\r\n                  type=\"text\"\r\n                  required\r\n                  placeholder=\"First name\"\r\n                />\r\n              </li>\r\n              <li>\r\n                <Input\r\n                  autoComplete=\"off\"\r\n                  value={lname}\r\n                  onChange={(e) => setLname(e.target.value)}\r\n                  type=\"text\"\r\n                  required\r\n                  placeholder=\"Last Name\"\r\n                />\r\n              </li>\r\n              <li>\r\n                <Input\r\n                  autoComplete=\"off\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  type=\"email\"\r\n                  required\r\n                  placeholder=\"Email Address\"\r\n                />\r\n              </li>\r\n              <li>\r\n                <Input\r\n                  autoComplete=\"off\"\r\n                  value={mobile}\r\n                  onChange={(e) => setMobile(e.target.value)}\r\n                  type=\"Text\"\r\n                  required\r\n                  placeholder=\"Phone Number\"\r\n                />\r\n              </li>\r\n              <li>\r\n                <Input\r\n                  autoComplete=\"off\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  type=\"password\"\r\n                  required\r\n                  placeholder=\"Password\"\r\n                />\r\n              </li>\r\n              <li>\r\n                <Input\r\n                  autoComplete=\"off\"\r\n                  value={confpass}\r\n                  onChange={(e) => setConfPassword(e.target.value)}\r\n                  type=\"password\"\r\n                  required\r\n                  placeholder=\"Confirm password\"\r\n                />\r\n              </li>\r\n              <li>\r\n                <div\r\n                  style={{\r\n                    marginTop: \"auto\",\r\n                    width: \"100%\",\r\n                    border: \"1px solid grey\",\r\n                    height: \"50px\",\r\n                    marginBottom: \"6px\",\r\n                  }}\r\n                >\r\n                  {/* <p>State:</p> */}\r\n                  <select\r\n                    defaultValue={Mystate}\r\n                    name=\"favoritesShootTypes\"\r\n                    id=\"favoritesShootTypes\"\r\n                    value={Mystate}\r\n                    onChange={(e) => setMystate(e.target.value)}\r\n                    style={{\r\n                      // width: \"200px\",\r\n                      border: \"none\",\r\n                      borderRadius: \"4px\",\r\n                      height: \"100%\",\r\n                    }}\r\n                  >\r\n                    <option value=\"\">State</option>\r\n                    {Mapstate()}\r\n                  </select>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                {Mystate && (\r\n                  <div\r\n                    style={{\r\n                      marginTop: \"auto\",\r\n                      width: \"100%\",\r\n                      border: \"1px solid grey\",\r\n                      height: \"50px\",\r\n                    }}\r\n                  >\r\n                    {/* <p>State:</p> */}\r\n                    <select\r\n                      defaultValue={Mylga}\r\n                      name=\"favoritesShootTypes\"\r\n                      id=\"favoritesShootTypes\"\r\n                      value={Mylga}\r\n                      onChange={(e) => setMylga(e.target.value)}\r\n                      style={{\r\n                        // width: \"200px\",\r\n                        border: \"none\",\r\n                        borderRadius: \"4px\",\r\n                        height: \"100%\",\r\n                      }}\r\n                    >\r\n                      <option value=\"\">Select Lga</option>\r\n                      {MapLga(Mystate)}\r\n                    </select>\r\n                  </div>\r\n                )}\r\n              </li>\r\n              <li style={{ textAlign: \"center\" }}>\r\n                <Buttons\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  onClick={handleSubmit}\r\n                >\r\n                  {loading ? (\r\n                    <CircularProgress\r\n                      size={24}\r\n                      style={{\r\n                        fontSize: 20,\r\n                        color: \"white\",\r\n                      }}\r\n                    />\r\n                  ) : (\r\n                    \"Register\"\r\n                  )}\r\n                </Buttons>\r\n              </li>\r\n              <li style={{ textAlign: \"center\" }}>\r\n                <small style={{ color: \"rgb(71, 178, 228)\" }}>\r\n                  <Link to=\"/PhotoGrapherLoginNew\"> Already Registered ?</Link>\r\n                </small>\r\n              </li>\r\n              {/* <li style={{ textAlign: \"left\" }}>\r\n                <p style={{ color: \"grey\" }}>\r\n                  <Link to=\"/PhotoGrapherLoginNew\"> Photographer's Login</Link>\r\n                </p>\r\n              </li> */}\r\n            </Listing>\r\n            <AlertDialog open={ErrorMessage} onClose={handleClose}>\r\n              {ErrorMessage}\r\n            </AlertDialog>\r\n          </SelectContentContainer1>\r\n        </SelectContainer>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PhotographersRegister;\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\n\r\nexport default function AlertDialog(props) {\r\n\tconst { open, onClose, children } = props\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\topen={open}\r\n\t\t\tonClose={onClose}\r\n\t\t\taria-labelledby='alert-dialog-title'\r\n\t\t\taria-describedby='alert-dialog-description'\r\n\t\t>\r\n\t\t\t<DialogTitle id='alert-dialog-title'>{'Alert'}</DialogTitle>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<DialogContentText id='alert-dialog-description'>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</DialogContentText>\r\n\t\t\t</DialogContent>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button onClick={onClose} color='primary'>\r\n\t\t\t\t\tClose\r\n\t\t\t\t</Button>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t)\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport Fade from '../Fade';\nimport { duration } from '../styles/transitions';\nimport Paper from '../Paper';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '@media print': {\n        // Use !important to override the Modal inline-style.\n        position: 'absolute !important'\n      }\n    },\n\n    /* Styles applied to the container element if `scroll=\"paper\"`. */\n    scrollPaper: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the container element if `scroll=\"body\"`. */\n    scrollBody: {\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      textAlign: 'center',\n      '&:after': {\n        content: '\"\"',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        height: '100%',\n        width: '0'\n      }\n    },\n\n    /* Styles applied to the container element. */\n    container: {\n      height: '100%',\n      '@media print': {\n        height: 'auto'\n      },\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: {\n      margin: 32,\n      position: 'relative',\n      overflowY: 'auto',\n      // Fix IE 11 issue, to remove at some point.\n      '@media print': {\n        overflowY: 'visible',\n        boxShadow: 'none'\n      }\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"paper\"`. */\n    paperScrollPaper: {\n      display: 'flex',\n      flexDirection: 'column',\n      maxHeight: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"body\"`. */\n    paperScrollBody: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      textAlign: 'left' // 'initial' doesn't work on IE 11\n\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=false`. */\n    paperWidthFalse: {\n      maxWidth: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xs\"`. */\n    paperWidthXs: {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"sm\"`. */\n    paperWidthSm: {\n      maxWidth: theme.breakpoints.values.sm,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"md\"`. */\n    paperWidthMd: {\n      maxWidth: theme.breakpoints.values.md,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"lg\"`. */\n    paperWidthLg: {\n      maxWidth: theme.breakpoints.values.lg,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xl\"`. */\n    paperWidthXl: {\n      maxWidth: theme.breakpoints.values.xl,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `fullWidth={true}`. */\n    paperFullWidth: {\n      width: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `fullScreen={true}`. */\n    paperFullScreen: {\n      margin: 0,\n      width: '100%',\n      maxWidth: '100%',\n      height: '100%',\n      maxHeight: 'none',\n      borderRadius: 0,\n      '&$paperScrollBody': {\n        margin: 0,\n        maxWidth: '100%'\n      }\n    }\n  };\n};\nvar defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nvar Dialog = /*#__PURE__*/React.forwardRef(function Dialog(props, ref) {\n  var BackdropProps = props.BackdropProps,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$fullScreen = props.fullScreen,\n      fullScreen = _props$fullScreen === void 0 ? false : _props$fullScreen,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'sm' : _props$maxWidth,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      open = props.open,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      _props$scroll = props.scroll,\n      scroll = _props$scroll === void 0 ? 'paper' : _props$scroll,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Fade : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      ariaDescribedby = props['aria-describedby'],\n      ariaLabelledby = props['aria-labelledby'],\n      other = _objectWithoutProperties(props, [\"BackdropProps\", \"children\", \"classes\", \"className\", \"disableBackdropClick\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onEscapeKeyDown\", \"onExit\", \"onExited\", \"onExiting\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\", \"aria-describedby\", \"aria-labelledby\"]);\n\n  var mouseDownTarget = React.useRef();\n\n  var handleMouseDown = function handleMouseDown(event) {\n    mouseDownTarget.current = event.target;\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    // Ignore the events not coming from the \"backdrop\"\n    // We don't want to close the dialog when clicking the dialog content.\n    if (event.target !== event.currentTarget) {\n      return;\n    } // Make sure the event starts and ends on the same DOM element.\n\n\n    if (event.target !== mouseDownTarget.current) {\n      return;\n    }\n\n    mouseDownTarget.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    className: clsx(classes.root, className),\n    BackdropComponent: Backdrop,\n    BackdropProps: _extends({\n      transitionDuration: transitionDuration\n    }, BackdropProps),\n    closeAfterTransition: true,\n    disableBackdropClick: disableBackdropClick,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    role: \"none presentation\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.container, classes[\"scroll\".concat(capitalize(scroll))]),\n    onMouseUp: handleBackdropClick,\n    onMouseDown: handleMouseDown\n  }, /*#__PURE__*/React.createElement(PaperComponent, _extends({\n    elevation: 24,\n    role: \"dialog\",\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-labelledby\": ariaLabelledby\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[\"paperScroll\".concat(capitalize(scroll))], classes[\"paperWidth\".concat(capitalize(String(maxWidth)))], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)\n  }), children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clicking the backdrop will not fire the `onClose` callback.\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog will be full-screen\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog enters.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableKeyboard` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog exits.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * If `true`, the Dialog is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialog'\n})(Dialog);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      flex: '1 1 auto',\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      overflowY: 'auto',\n      padding: '8px 24px',\n      '&:first-child': {\n        // dialog without title\n        paddingTop: 20\n      }\n    },\n\n    /* Styles applied to the root element if `dividers={true}`. */\n    dividers: {\n      padding: '16px 24px',\n      borderTop: \"1px solid \".concat(theme.palette.divider),\n      borderBottom: \"1px solid \".concat(theme.palette.divider)\n    }\n  };\n};\nvar DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$dividers = props.dividers,\n      dividers = _props$dividers === void 0 ? false : _props$dividers,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"dividers\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dividers && classes.dividers),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   */\n  dividers: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContent'\n})(DialogContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    marginBottom: 12\n  }\n};\nvar DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(props, ref) {\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContentText'\n})(DialogContentText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end',\n    flex: '0 0 auto'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogActions'\n})(DialogActions);"],"sourceRoot":""}