{"version":3,"sources":["views/ForgotPassword.js","components/AlertDialog.js","../node_modules/@material-ui/core/esm/Dialog/Dialog.js","../node_modules/@material-ui/core/esm/DialogTitle/DialogTitle.js","../node_modules/@material-ui/core/esm/DialogContent/DialogContent.js","../node_modules/@material-ui/core/esm/DialogContentText/DialogContentText.js","../node_modules/@material-ui/core/esm/DialogActions/DialogActions.js"],"names":["useStyles","makeStyles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","width","height","form","submit","ForgotPassword","props","auth","useSelector","state","dispatch","useDispatch","classes","useState","email","setEmail","password","setPassword","useEffect","info","history","push","component","maxWidth","className","src","logo","alt","variant","languageJson","forgot_password","onSubmit","e","preventDefault","signIn","required","fullWidth","id","label","email_address","name","autoComplete","onChange","target","value","autoFocus","type","color","sign_in","remebered_password","href","open","error","flag","onClose","clearLoginError","sign_in_error","AlertDialog","children","aria-labelledby","aria-describedby","onClick","defaultTransitionDuration","enter","duration","enteringScreen","exit","leavingScreen","Dialog","React","ref","BackdropProps","_props$disableBackdro","disableBackdropClick","_props$disableEscapeK","disableEscapeKeyDown","_props$fullScreen","fullScreen","_props$fullWidth","_props$maxWidth","onBackdropClick","onEnter","onEntered","onEntering","onEscapeKeyDown","onExit","onExited","onExiting","_props$PaperComponent","PaperComponent","Paper","_props$PaperProps","PaperProps","_props$scroll","scroll","_props$TransitionComp","TransitionComponent","Fade","_props$transitionDura","transitionDuration","TransitionProps","ariaDescribedby","ariaLabelledby","other","_objectWithoutProperties","mouseDownTarget","Modal","_extends","clsx","root","BackdropComponent","Backdrop","closeAfterTransition","appear","in","timeout","role","container","concat","capitalize","onMouseUp","event","currentTarget","current","onMouseDown","elevation","String","paperFullScreen","paperFullWidth","withStyles","position","scrollPaper","justifyContent","scrollBody","overflowY","overflowX","textAlign","content","verticalAlign","outline","boxShadow","paperScrollPaper","maxHeight","paperScrollBody","paperWidthFalse","paperWidthXs","Math","max","breakpoints","values","xs","_defineProperty","down","paperWidthSm","sm","paperWidthMd","md","paperWidthLg","lg","paperWidthXl","xl","borderRadius","DialogTitle","_props$disableTypogra","disableTypography","Typography","padding","flex","DialogContent","_props$dividers","dividers","WebkitOverflowScrolling","paddingTop","borderTop","divider","borderBottom","DialogContentText","marginBottom","DialogActions","_props$disableSpacing","disableSpacing","marginLeft"],"mappings":"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","file":"static/js/11.e9d7ee24.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Button from '@material-ui/core/Button'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\nimport logo from '../assets/logo.png'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport AlertDialog from '../components/AlertDialog'\r\nimport languageJson from '../config/language'\r\nimport { signIn, clearLoginError } from '../actions/authactions'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\t'@global': {\r\n\t\tbody: {\r\n\t\t\tbackgroundColor: theme.palette.common.white,\r\n\t\t},\r\n\t},\r\n\tpaper: {\r\n\t\tmarginTop: theme.spacing(8),\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tavatar: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t\twidth: 192,\r\n\t\theight: 192,\r\n\t},\r\n\tform: {\r\n\t\twidth: '100%', // Fix IE 11 issue.\r\n\t\tmarginTop: theme.spacing(1),\r\n\t},\r\n\tsubmit: {\r\n\t\tmargin: theme.spacing(3, 0, 2),\r\n\t},\r\n}))\r\n\r\nconst ForgotPassword = (props) => {\r\n\tconst auth = useSelector((state) => state.auth)\r\n\tconst dispatch = useDispatch()\r\n\tconst classes = useStyles()\r\n\tconst [email, setEmail] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\r\n\tuseEffect(() => {\r\n\t\tif (auth.info) {\r\n\t\t\tprops.history.push('/')\r\n\t\t}\r\n\t})\r\n\r\n\tconst handleEmailChange = (e) => {\r\n\t\tsetEmail(e.target.value)\r\n\t}\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault()\r\n\t\tdispatch(signIn(email, password))\r\n\t}\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetEmail('')\r\n\t\tsetPassword('')\r\n\t\tdispatch(clearLoginError())\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container component='main' maxWidth='xs'>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<div className={classes.paper}>\r\n\t\t\t\t<Avatar className={classes.avatar}>\r\n\t\t\t\t\t<img src={logo} alt='Logo' />\r\n\t\t\t\t</Avatar>\r\n\t\t\t\t<Typography component='h1' variant='h5'>\r\n\t\t\t\t\t{languageJson.forgot_password}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<form className={classes.form} onSubmit={handleSubmit}>\r\n\t\t\t\t\t<TextField\r\n\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\tmargin='normal'\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tid='email'\r\n\t\t\t\t\t\tlabel={languageJson.email_address}\r\n\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\tautoComplete='email'\r\n\t\t\t\t\t\tonChange={handleEmailChange}\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\ttype='submit'\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tvariant='contained'\r\n\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\tclassName={classes.submit}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{languageJson.sign_in}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</form>\r\n\t\t\t\t<Typography component='p'>\r\n\t\t\t\t\t{languageJson.remebered_password}\r\n\t\t\t\t\t<a href='/login'>Login</a>\r\n\t\t\t\t</Typography>\r\n\t\t\t</div>\r\n\t\t\t<AlertDialog open={auth.error.flag} onClose={handleClose}>\r\n\t\t\t\t{languageJson.sign_in_error}\r\n\t\t\t</AlertDialog>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default ForgotPassword\r\n","import React from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\n\r\nexport default function AlertDialog(props) {\r\n\tconst { open, onClose, children } = props\r\n\treturn (\r\n\t\t<Dialog\r\n\t\t\topen={open}\r\n\t\t\tonClose={onClose}\r\n\t\t\taria-labelledby='alert-dialog-title'\r\n\t\t\taria-describedby='alert-dialog-description'\r\n\t\t>\r\n\t\t\t<DialogTitle id='alert-dialog-title'>{'Alert'}</DialogTitle>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<DialogContentText id='alert-dialog-description'>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</DialogContentText>\r\n\t\t\t</DialogContent>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button onClick={onClose} color='primary'>\r\n\t\t\t\t\tClose\r\n\t\t\t\t</Button>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t)\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Backdrop from '../Backdrop';\nimport Fade from '../Fade';\nimport { duration } from '../styles/transitions';\nimport Paper from '../Paper';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '@media print': {\n        // Use !important to override the Modal inline-style.\n        position: 'absolute !important'\n      }\n    },\n\n    /* Styles applied to the container element if `scroll=\"paper\"`. */\n    scrollPaper: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the container element if `scroll=\"body\"`. */\n    scrollBody: {\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      textAlign: 'center',\n      '&:after': {\n        content: '\"\"',\n        display: 'inline-block',\n        verticalAlign: 'middle',\n        height: '100%',\n        width: '0'\n      }\n    },\n\n    /* Styles applied to the container element. */\n    container: {\n      height: '100%',\n      '@media print': {\n        height: 'auto'\n      },\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: {\n      margin: 32,\n      position: 'relative',\n      overflowY: 'auto',\n      // Fix IE 11 issue, to remove at some point.\n      '@media print': {\n        overflowY: 'visible',\n        boxShadow: 'none'\n      }\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"paper\"`. */\n    paperScrollPaper: {\n      display: 'flex',\n      flexDirection: 'column',\n      maxHeight: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `scroll=\"body\"`. */\n    paperScrollBody: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      textAlign: 'left' // 'initial' doesn't work on IE 11\n\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=false`. */\n    paperWidthFalse: {\n      maxWidth: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xs\"`. */\n    paperWidthXs: {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444),\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"sm\"`. */\n    paperWidthSm: {\n      maxWidth: theme.breakpoints.values.sm,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.sm + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"md\"`. */\n    paperWidthMd: {\n      maxWidth: theme.breakpoints.values.md,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.md + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"lg\"`. */\n    paperWidthLg: {\n      maxWidth: theme.breakpoints.values.lg,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.lg + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `maxWidth=\"xl\"`. */\n    paperWidthXl: {\n      maxWidth: theme.breakpoints.values.xl,\n      '&$paperScrollBody': _defineProperty({}, theme.breakpoints.down(theme.breakpoints.values.xl + 32 * 2), {\n        maxWidth: 'calc(100% - 64px)'\n      })\n    },\n\n    /* Styles applied to the `Paper` component if `fullWidth={true}`. */\n    paperFullWidth: {\n      width: 'calc(100% - 64px)'\n    },\n\n    /* Styles applied to the `Paper` component if `fullScreen={true}`. */\n    paperFullScreen: {\n      margin: 0,\n      width: '100%',\n      maxWidth: '100%',\n      height: '100%',\n      maxHeight: 'none',\n      borderRadius: 0,\n      '&$paperScrollBody': {\n        margin: 0,\n        maxWidth: '100%'\n      }\n    }\n  };\n};\nvar defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nvar Dialog = /*#__PURE__*/React.forwardRef(function Dialog(props, ref) {\n  var BackdropProps = props.BackdropProps,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$fullScreen = props.fullScreen,\n      fullScreen = _props$fullScreen === void 0 ? false : _props$fullScreen,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'sm' : _props$maxWidth,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEnter = props.onEnter,\n      onEntered = props.onEntered,\n      onEntering = props.onEntering,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      onExit = props.onExit,\n      onExited = props.onExited,\n      onExiting = props.onExiting,\n      open = props.open,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PaperProps = props.PaperProps,\n      PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n      _props$scroll = props.scroll,\n      scroll = _props$scroll === void 0 ? 'paper' : _props$scroll,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Fade : _props$TransitionComp,\n      _props$transitionDura = props.transitionDuration,\n      transitionDuration = _props$transitionDura === void 0 ? defaultTransitionDuration : _props$transitionDura,\n      TransitionProps = props.TransitionProps,\n      ariaDescribedby = props['aria-describedby'],\n      ariaLabelledby = props['aria-labelledby'],\n      other = _objectWithoutProperties(props, [\"BackdropProps\", \"children\", \"classes\", \"className\", \"disableBackdropClick\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"onEnter\", \"onEntered\", \"onEntering\", \"onEscapeKeyDown\", \"onExit\", \"onExited\", \"onExiting\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\", \"aria-describedby\", \"aria-labelledby\"]);\n\n  var mouseDownTarget = React.useRef();\n\n  var handleMouseDown = function handleMouseDown(event) {\n    mouseDownTarget.current = event.target;\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    // Ignore the events not coming from the \"backdrop\"\n    // We don't want to close the dialog when clicking the dialog content.\n    if (event.target !== event.currentTarget) {\n      return;\n    } // Make sure the event starts and ends on the same DOM element.\n\n\n    if (event.target !== mouseDownTarget.current) {\n      return;\n    }\n\n    mouseDownTarget.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({\n    className: clsx(classes.root, className),\n    BackdropComponent: Backdrop,\n    BackdropProps: _extends({\n      transitionDuration: transitionDuration\n    }, BackdropProps),\n    closeAfterTransition: true,\n    disableBackdropClick: disableBackdropClick,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onEscapeKeyDown: onEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n    appear: true,\n    in: open,\n    timeout: transitionDuration,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    role: \"none presentation\"\n  }, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.container, classes[\"scroll\".concat(capitalize(scroll))]),\n    onMouseUp: handleBackdropClick,\n    onMouseDown: handleMouseDown\n  }, /*#__PURE__*/React.createElement(PaperComponent, _extends({\n    elevation: 24,\n    role: \"dialog\",\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-labelledby\": ariaLabelledby\n  }, PaperProps, {\n    className: clsx(classes.paper, classes[\"paperScroll\".concat(capitalize(scroll))], classes[\"paperWidth\".concat(capitalize(String(maxWidth)))], PaperProps.className, fullScreen && classes.paperFullScreen, fullWidth && classes.paperFullWidth)\n  }), children))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, clicking the backdrop will not fire the `onClose` callback.\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog will be full-screen\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog enters.\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog has entered.\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog is entering.\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableKeyboard` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired before the dialog exits.\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog has exited.\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired when the dialog is exiting.\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * If `true`, the Dialog is open.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialog'\n})(Dialog);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    margin: 0,\n    padding: '16px 24px',\n    flex: '0 0 auto'\n  }\n};\nvar DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other), disableTypography ? children : /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    variant: \"h6\"\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a typography component.\n   * For instance, this can be useful to render an h4 instead of the default h2.\n   */\n  disableTypography: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogTitle'\n})(DialogTitle);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      flex: '1 1 auto',\n      WebkitOverflowScrolling: 'touch',\n      // Add iOS momentum scrolling.\n      overflowY: 'auto',\n      padding: '8px 24px',\n      '&:first-child': {\n        // dialog without title\n        paddingTop: 20\n      }\n    },\n\n    /* Styles applied to the root element if `dividers={true}`. */\n    dividers: {\n      padding: '16px 24px',\n      borderTop: \"1px solid \".concat(theme.palette.divider),\n      borderBottom: \"1px solid \".concat(theme.palette.divider)\n    }\n  };\n};\nvar DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$dividers = props.dividers,\n      dividers = _props$dividers === void 0 ? false : _props$dividers,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"dividers\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dividers && classes.dividers),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   */\n  dividers: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContent'\n})(DialogContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    marginBottom: 12\n  }\n};\nvar DialogContentText = /*#__PURE__*/React.forwardRef(function DialogContentText(props, ref) {\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    component: \"p\",\n    variant: \"body1\",\n    color: \"textSecondary\",\n    ref: ref\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContentText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogContentText'\n})(DialogContentText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8,\n    justifyContent: 'flex-end',\n    flex: '0 0 auto'\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar DialogActions = /*#__PURE__*/React.forwardRef(function DialogActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiDialogActions'\n})(DialogActions);"],"sourceRoot":""}