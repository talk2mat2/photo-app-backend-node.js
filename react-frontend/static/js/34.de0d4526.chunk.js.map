{"version":3,"sources":["views/users/Wallet.js"],"names":["Styled","div","Container","BigText","p","Listing","ul","Buttons","Button","EditProfile","useStyles","makeStyles","theme","root","width","modal","display","alignItems","justifyContent","ButtonsStyle","marginTop","marginLeft","Wallet","classes","CurrentUser","useSelector","state","user","currentUser","userData","React","useState","open","setOpen","amount","setAmount","setshowSuccess","dispatch","useDispatch","token","setisloading","handleClose","handleUpdateWallet","useCallback","transaction_id","a","console","log","axios","post","process","headers","authorization","then","res","data","SYNCUSERDATA","catch","err","alert","response","message","config","public_key","tx_ref","Date","getTime","_id","parseFloat","currency","payment_options","customer","email","Email","phonenumber","mobile","name","fname","customizations","title","description","logo","handleFlutterPayment","useFlutterwave","PayByflutterWave","callback","closePaymentModal","status","onClose","style","backgroundColor","borderRadius","minHeight","padding","marginBottom","boxSizing","flexDirection","fontSize","className","wallet","onClick","minWidth","variant","color","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","in","textAlign","alignSelf","height","onChange","e","target","value","type","placeholder","required","disabled"],"mappings":"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","file":"static/js/34.de0d4526.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport Styled from \"styled-components\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport { useFlutterwave, closePaymentModal } from \"flutterwave-react-v3\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport { SYNCUSERDATA } from \"../../redux/action\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport axios from \"axios\";\r\nconst LoaderContainer = Styled.div`\r\n  width: 100vw;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: rgb(255, 255, 255, 0.5);\r\n  text-align: center;\r\n  justify-content: center;\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  padding: 10px;\r\n  box-sizing: border-boz;\r\n  align-items: center;\r\n\r\n  transform: translate(-50%, -50%);\r\n  z-index: 7;\r\n`;\r\nconst Container = Styled.div`\r\nwidth:100%;\r\ndisplay:flex;\r\nflex-direction:column;\r\nalign-items:center;\r\nbackground-color:#f1f0f0;\r\nmin-height:440px;\r\npadding-top:10px;\r\n`;\r\nconst BigText = Styled.p`\r\nfont-size:20px;\r\ncolor:grey;\r\nfont-weight:500;\r\n`;\r\nconst Listing = Styled.ul`\r\nmargin-top:20px;\r\ndisplay:flex;\r\nflex-direction:column;\r\nalign-items:flex-start;\r\npadding:0px;\r\nwidth:95%;\r\nli{\r\n\tlist-style:none;\r\n\tfont-size:18px;\r\n\tcolor:grey;\r\n}\r\n`;\r\nconst Buttons = Styled(Button)`\r\n  && {\r\n\r\n\r\nmargin-top:8px;\r\n    color: rgb(190, 10, 10);\r\n    border-color: rgb(190, 10, 10);\r\n    &:focus {\r\n      background-color: white;\r\n    }\r\n    // @media (max-width: 1100px) {\r\n    //   display: none;\r\n    // }\r\n  }\r\n`;\r\nconst EditProfile = Styled.div`\r\n\r\nover-flow:scroll;\r\nbackground-color: rgb(246, 249, 255);\r\n  padding:10px;\r\n  box-sizing:border-box;\r\n  width: 550px;\r\n  max-height: 100vh;\r\n  min-height:200px;\r\n  border-radius:8px;\r\n  // background-image: linear-gradient(to right, #ddd6f3 , #ddd6f3);\r\ndisplay:flex;\r\n  flex-direction:column;\r\n  align-items:center;\r\n  justify-content:flex-start;\r\n  @media(max-width:630px){\r\nwidth:90vw;\r\n  }\r\n`;\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\nconst ButtonsStyle = {\r\n  marginTop: \"50px\",\r\n  marginLeft: \"80px\",\r\n};\r\nconst Wallet = () => {\r\n  const classes = useStyles();\r\n  const CurrentUser = useSelector((state) => state.user.currentUser);\r\n  const userData = CurrentUser && CurrentUser.userData;\r\n  const [open, setOpen] = React.useState(false);\r\n  const [amount, setAmount] = React.useState(0);\r\n  const [showSuccess, setshowSuccess] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const token = CurrentUser && CurrentUser.token;\r\n  const [isloading, setisloading] = useState(false);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleUpdateWallet = React.useCallback(async (transaction_id) => {\r\n    console.log(\"called\");\r\n    //_id is photographers id\r\n    // setConfirmAgreeVisible(false);\r\n    // setPhotoDetails(false);\r\n    if (!transaction_id) {\r\n      return null;\r\n    }\r\n    // /bookSession\r\n    setisloading(true);\r\n    await axios\r\n      .post(\r\n        `${process.env.REACT_APP_API_URL}/users/fundWallet`,\r\n        {\r\n          transaction_id: transaction_id,\r\n        },\r\n        { headers: { authorization: token } }\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setisloading(false);\r\n        setshowSuccess(true);\r\n        dispatch(SYNCUSERDATA(res.data.userData));\r\n      })\r\n      .catch((err) => {\r\n        setisloading(false);\r\n        alert(\"An error occured\");\r\n        if (err.response) {\r\n          console.log(err.response.data.message);\r\n          alert(err.response.data.message);\r\n        }\r\n        console.log(err);\r\n      });\r\n    //api post request to book appointment with drivers id\r\n  }, []);\r\n  const config = {\r\n    public_key: \"FLWPUBK_TEST-e96ca53411ac8244d05c06677fca3509-X\",\r\n    tx_ref: new Date().getTime() + \"-\" + userData._id,\r\n    amount: parseFloat(amount),\r\n    currency: \"NGN\",\r\n    payment_options: \"card,mobilemoney,ussd\",\r\n    customer: {\r\n      email: userData.Email,\r\n      phonenumber: userData.mobile,\r\n      name: userData.fname,\r\n    },\r\n    customizations: {\r\n      title: \"Update wallet\",\r\n      description: \"Payment for photowallet\",\r\n      logo:\r\n        \"https://st2.depositphotos.com/4403291/7418/v/450/depositphotos_74189661-stock-illustration-online-shop-log.jpg\",\r\n    },\r\n  };\r\n\r\n  const handleFlutterPayment = useFlutterwave(config);\r\n  // const handleClose = () => {\r\n  //   setshowSuccess(false);\r\n  //   history.push(\"/\");\r\n  //   setTimeout(() => {\r\n  //     window.location.reload();\r\n  //   }, 2000);\r\n  // };\r\n  const PayByflutterWave = async () => {\r\n    await handleFlutterPayment({\r\n      callback: (response) => {\r\n        console.log(response);\r\n        closePaymentModal(); // this will close the modal programmatically\r\n        if (response.status === \"successful\") {\r\n          console.log(response);\r\n          // handleSuccess();\r\n          handleUpdateWallet(response.transaction_id);\r\n        }\r\n      },\r\n      onClose: () => {},\r\n    });\r\n  };\r\n  return (\r\n    <Container>\r\n      <div\r\n        style={{\r\n          backgroundColor: \"#ffffff\",\r\n          borderRadius: \"12px\",\r\n          minHeight: \"560px\",\r\n          width: \"94%\",\r\n          padding: \"10px\",\r\n          marginTop: \"20px\",\r\n          marginBottom: \"20px\",\r\n          boxSizing: \"border-box\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <BigText style={{ fontSize: \"16px\" }}>Wallet Page</BigText>\r\n        <Listing>\r\n          <li>\r\n            <p className=\"menuitem\">\r\n              {\" \"}\r\n              PhotoCredits: <b>NGN {userData.wallet} Balance</b>\r\n            </p>\r\n          </li>\r\n\r\n          <li>\r\n            {\" \"}\r\n            <Buttons\r\n              onClick={handleOpen}\r\n              // onClick={PayByflutterWave}\r\n              style={{ ...ButtonsStyle, minWidth: \"100px\" }}\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n            >\r\n              <small> Update Walllet</small>\r\n            </Buttons>\r\n          </li>\r\n        </Listing>\r\n        <Modal\r\n          aria-labelledby=\"transition-modal-title\"\r\n          aria-describedby=\"transition-modal-description\"\r\n          className={classes.modal}\r\n          open={open}\r\n          onClose={handleClose}\r\n          closeAfterTransition\r\n          BackdropComponent={Backdrop}\r\n          BackdropProps={{\r\n            timeout: 500,\r\n          }}\r\n        >\r\n          <Fade in={open}>\r\n            <EditProfile>\r\n              <h2\r\n                style={{\r\n                  fontSize: \"20px\",\r\n                  textAlign: \"left\",\r\n                  alignSelf: \"flex-start\",\r\n                }}\r\n                className=\"tt-heading-title\"\r\n              >\r\n                Current Balance: NGN {userData.wallet}\r\n              </h2>\r\n              <div style={{ height: \"40px\" }} />\r\n              {/* <div style={{ marginTop: \"auto\", width: \"100%\" }}>\r\n                <h4>Favourite shoot type</h4>\r\n                <select\r\n                  defaultValue={favoritesShootTypes}\r\n                  name=\"favoritesShootTypes\"\r\n                  id=\"favoritesShootTypes\"\r\n                  value={favoritesShootTypes}\r\n                  onChange={(e) => setfavoritesShootTypes(e.target.value)}\r\n                  style={{\r\n                    width: \"200px\",\r\n                    border: \"none\",\r\n                    borderRadius: \"4px\",\r\n                    height: \"30px\",\r\n                  }}\r\n                >\r\n                  <option value=\"\">select</option>\r\n                  <option value=\"Real estate\">Real estate</option>\r\n                  <option value=\"family\">family</option>\r\n                  <option value=\"Party\">Party</option>\r\n                  <option value=\"Dating\">Dating</option>\r\n                  <option value=\"Team/Office\">Team/Office</option>\r\n                  <option value=\"Graduation\">Graduation</option>\r\n                  <option value=\"Fashion\">Fashion</option>\r\n                  <option value=\"media\">media</option>\r\n                  <option value=\"Food\">Food</option>\r\n                  <option value=\"Product\">Product</option>\r\n                  <option value=\"Landscape\">Landscape</option>\r\n                </select>\r\n              </div> */}\r\n              {/* <div className=\"col-lg-6\"> */}\r\n              <div\r\n                style={{ width: \"70%\", backgroundColor: \"grey\" }}\r\n                className=\"form-group\"\r\n              >\r\n                <input\r\n                  onChange={(e) => {\r\n                    setAmount(e.target.value);\r\n                  }}\r\n                  value={amount}\r\n                  style={{ width: \"100%\" }}\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  placeholder=\"Enter Amount greater than 1000\"\r\n                  required\r\n                />\r\n              </div>\r\n              {/* </div> */}\r\n              <div style={{ height: \"8px\" }} />\r\n              <div style={{ marginTop: \"auto\" }}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <button\r\n                      disabled={!amount || amount < 500}\r\n                      onClick={() => {\r\n                        handleClose();\r\n                        PayByflutterWave();\r\n                      }}\r\n                      type=\"submit\"\r\n                      className=\"btn btn-primary btn-lg margin-top-40\"\r\n                    >\r\n                      Make Payment\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* {isloading ? (\r\n                <LoaderContainer>\r\n                  <CircularProgress style={{ color: \"tomato\" }} />\r\n                  <h4 style={{ backgroundColor: \"#ffffff\" }}>Please wait...</h4>\r\n                </LoaderContainer>\r\n              ) : null} */}\r\n            </EditProfile>\r\n          </Fade>\r\n        </Modal>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Wallet;\r\n"],"sourceRoot":""}